Сервер
  0. Текущие задачи
    - прикрутить работу с БД для хранения пользователей
      с типом БД: для локального сервера это будет sqlite;
        но так женужно подготовить скрипты для наката схемы в postgresql, которую предполагаю использовать
        для web-сервера
      установить драйвер
      написать класс-прослойку (в т.ч. разобраться с работой с коннектами, транзакциями и пр.)
      спроектировать модель данных
      написать методы инициализации всех нужных структур в БД (скорее всего тоже в классе-прослойке)
      сделать методы для импорта/экспорта данных БД (а надо ли оно?)
      методы для сохранения/загрузки данных пользователя будут в классе Player
      игровые параметры профиля тоже будут в БД (то, что я хотел сначала в отдельном файле хранить)
      сэйвы игр (а точнее сохраненные состояния ключевых переменных) тоже будут храниться в БД,
        собственно это будут не сэйвы как таковые, а текущее состояние игры, которое при каждом изменении
        будет сбрасываться в БД и при каждом игровом запросе из нее извлекаться. Хранить буду в БД, т.к.
        сервер может быть перезапущен или клиент подключится к другому экзкмпляру серверного приложения
        и это не должно ломать игру.
  1. Параметры игры (договоренности, которые будут задаваться в начале каждой игры)
    - игроки (выбор игроков, минимум 3, максимум 4)
    - ставка в копейках (1-10 коп) (подробнее в п.2)
    - типы игр: Обычная (Возрастание, Все, Убывание), Бескозырка, Темная, Мизер, Золотая, Лобовая
    - размер колоды: 36, 54 (тут будет 2 джокера?)
    - с джокером/без
    - джокер играет строго по масти (да/нет): т.е. джокер забирается козырем или берет всегда; варианты:
      если ты заказал джокером некозырную масть (берешь по старшей или ходишь как некозырная крупная карта), 
        а у кого-то нет этой масти и он ложит козырь, то в случае строгого джокера забирает козырь, иначе - джокер
    - можно/нет джокером запросить "По старшей карте масти"
    - можно/нет джокером запросить "По младшей карте масти"
    - кол-во очков за взятку и множители:
      множитель для мизера/недобора (-1, менять нельзя)
      очки за мизер/золото (15)
      очки за темную/бескозырку (20)
      очки за лобовую (10)
      очки за пас (5)
      множитель для темной (2)
      множитель для лобовой (5)
    - штраф на за 0 взяток на золоте (-50)
    - бонус за 0 взяток на мизере (50)
    - бонус (множитель) если заказ = кол-ву карт в партии (кроме одной) (2)
      если не взял то еще умножается на множитель для недобора (это включено, если включен данный бонус, отдельно отключать нельзя)
    - запрет на 3 паса подряд
    - бонус (включен/выключен) за то, что сыграл все игры блока (блоки: раздача всей колоды, темная, бескозырка, лобовая)
      добавляется в конце блдока игры (к расчету последней партии блока)
      расчет такой: (кол-во очков за взятку в этом типе игры * кол-во игр блока) * множитель (если есть)
    - вариант расчета выигрыша:
      выигравший только один - он в плюсе, все остальные в минусе
      рассчитывается разность между очками игроков, в таком варианте может быть и несколько игроков в плюсе
  2. Игровой процесс
    - добавить возможность играть вчетвером
    - поменять местами очередность мизера и золотой
    - сделать расчет итога в рублях. У игрока есть счет. Новому игроку выдается безвозмездно 10 р
      остальные деньги на счете - сумма твоих выигрышей/проигрышей
      ставить можно и когда у тебя минус, ограничений нет
      сумма ставки сразу списывается с счета в начале игры
      ставка может быть любая из разрешенного диапазона (1-10 коп)
    - доработать логику AI:
      убрать знание карт игроков (шулерского режима вобще не будет)
      переосмыслить и переработать саму логику
      оставить существующие варианты сложности
      оставить уровни риска (3 штуки: рискованный, нейтральный, осторожный) и доработать логику их влияния
      выпилить стили игры игроков (там сейчас пока только закладки на это, логики нет - вобще убрать, и из параметров игрока тоже)
    - за отказ от игры начислять штрафы в деньгах (там сейчас как-то считается, посмотреть что там). Надо сделать так, чтоб это было заведомо 
      дороже любого проигрыша
    - остальную логику просто портирую из существующей игры, попутно перерабатывая
  3. Атрибуты игрока
    - id: оно же имя папки профиля, менять нельзя. id никому не видно, но в профиле игрока ему самому видно
    - login: используется для авторизации, ограничение на набор символов, можно поменять. Никто не видит, кроме самого игрока в профиле
    - пароль
    - Имя (Отображаемое имя: в игре, в таблице игроков и т.д.). Если не задано - будет скопирован логин (при изменении логина тоже, но только если
      оно совпадает со старым логином)
    - картинка
    - тип (человек / робот)
    - уровень риска (только у компьютерного)
    - уровень (сложность, толко у компьютерного); да-да, сложности игры как таковой не будет, будет сложность отдельно взятых игроков
    - сумма денег (менять нельзя, начисляется атвоматически)
    - статистические данные:
      кол-во игр сыграно
      кол-во брошено
      кол-во выиграно
      кол-во проиграно
      очков выигрыша
      очков проигрыша
      сумма очков (выигрыш - проигрыш)
  4. Логика работы с игроками и профилями, хранение параметров, особенности игры, связанные с игроками
    - все игроки всегда хранятся на сервере, для каждого создается папка профиля (по id игрока)
    - все параметры игрока и игровые настройки хранятся в папке профиля
    - любой может добавлять/редактировать/удалять любого игрока, если знает его пароль; пароль задается при создании, т.о.
      создавать игроков может каждый (это касается всех типов игроков - компютерного и человека)
    - компьютерные игроки хранятся так же, как люди, работа с ними как с людьми, кроме следующих условий:
      они сами себя не могут править :-))
      отличаются наличием некоторых атрибутов (уровень, риск, флаг робота)
      нельзя представляться от их лица и играть за них человеку (это касается только самой игры, править профиль можно)
      их в игру добавляет создатель
      за них играет только ИИ
    - тип игрока нельзя менять - если создан как человек, компьютером он уже не станет и наоборот
    - авторизация - при создании игры первым шагом надо будет авторизоваться
    - авторизация - ты можешь представиться кем угодно из людей, если знаешь пароль
    - авторизация - больше авторизация нигде не требуется и нигде не учитывается
    - все видят всех
    - все могут добавлять в игру любого компьютерного игрока, пароль для этого не нужен
    - на игру генериться id и пароль
    - других игроков-людей в сетевую добавлять нельзя, можно только присоединиться к игре, если знаешь пароль (пока есть места)
    - править других игроков можно всегда, если знаешь пароль того, кого правишь (в т.ч. и людей)
    - если создаешь игру, договоренности по игре автоматически сохранятся в твоем профиле, при создании новых они будут использованы
      как дефолтные (естественно каждый раз перезаписываться будут актуальными)
    - текущая игра, если ее надо отложить, сохраняется в профиле создателя
    - если кто-то покинул игру с просьбой отложить ее - она сохраняется у создателя и завершается
    - при создании новой игры можно будет выбрать одну из отложенных или создать новую
      при присоединении к отложенной можно будет присоединиться только тому, кто в ней уже был, заменять игроков нельзя
    - запустить отложенную игру, чтобы доиграть ее, которую создал не ты - невозможно, к такой игре можно только присоединиться, если создатель
      ее стартовал
    - если кто-то покинул игру, бросив ее - игра завершается без сохранения. Бросивший штрафуется, в статитсику дописывается +1 к брошенным.
      Остальным ничего не засчитывается, ставки возвращаются (всем, кроме бросившего)
    - ставку на игру назначает создатель, остальные могут толко принять ее
  5. Убрать из игровой логики:
    - возможность выбора четных/нечетных раздач
    - вариант игры (короткая/длинная (это когда каждую раздачу раздают все игроки)). Всегда играем короткую -
      каждый раздает следующую
    - стили игры игрока из параметров игрока и игровой логики (это выкладки: против всех, за себя и т.д.)

Клиент
  1. Интерфейс
    - Поменять расположение игроков (не по углам, а по серединам), т.к. будет еще игра вчетвером
    - Игровой стол: убрать посередине рамки и отрисовавать карты со смещением к тому игроку, кто ходил, порядок
      расположения карт всегда один и тот же - карта всегда расположена ближе к игроку, который ей ходил,
      а не как сейчас в порядке хода. Убрать все надписи, выделять карту того, кто первый ходил (рамкой/цветом)
      Если показ таблицы игры после каждой раздачи отключен, то в конце раздачи писать на нем итог (по сути что-то вроде строки таблицы,
      только обдумать, как все расположить); надписи пожирнее и разноцветно.
    - выделить область для общей информации по раздаче (надписи пожирнее и разноцветно):
      тип раздачи, сумма взяток, кол-во недобора/перебора (выделять разными цветами)
    - выделить область для оперативной информации (надписи пожирнее и разноцветно):
      козырь (показывать карту или значек масти, если розданы все карты), кто первый ходит, чей сейчас ход
    - скрыть таблицу игры, оставить кнопку для ее показа. Показывать ее в конце каждой раздачи (в отдельном окне)
      или как вариант не показывать в промежутке, а вместо нее только результат раздачи ("короткий вид"),
      а таблицу светить в конце игры.
    - карты других игроков отрисовывать сложенными пачкой или очень компактно (пачкой с маленьким сдвигом)
    - надписи сделать побольше и переработать сам текст (это раскидано по предыдущим пунктам)
    - цвета шрифтов надписей у игроков на столе, кода недобрал, взял свое, перебрал вынести в настройки,
      точнее цвета для краткого вида результата раздачи
    - в таблице игры объединить в одну колонку "Заказ/взято". Раскрашиваьт их цветами: красный - недобор, голубой - перебор, синий - взял свое
      (вобще это вынести в настройки). Остальное цветом фона. Шапку раскрашивать по каждому игроку своим цветом (цвет выбираем случайно из набора)
